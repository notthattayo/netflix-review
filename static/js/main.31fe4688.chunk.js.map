{"version":3,"sources":["assets/netflix-logo.png","pages/landing/Landing.tsx","utils/axios.js","utils/types.ts","components/Banner.tsx","components/Row.tsx","pages/home/Home.tsx","components/MovieExcerpt.tsx","pages/details/MovieDetails.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/requests.js"],"names":["Landing","className","src","alt","logo","href","to","instance","axios","create","baseURL","initialMovieProps","name","poster_path","backdrop_path","id","title","original_name","overview","Banner","props","str","n","history","useHistory","useState","movie","setMovie","useEffect","a","get","requests","fetchTrending","request","data","results","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backgroundPosition","console","log","IconButton","onClick","push","substr","Row","fetchUrl","isLargeRow","movies","setMovies","map","base_url","Home","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","movieTrailer","require","MovieExcerpt","sidebarImg","year","producer","tagline","trailerUrl","setTrailerUrl","then","url","urlParams","URLSearchParams","URL","search","catch","err","fontWeight","lineHeight","videoId","MovieDetailProps","production_companies","MovieDetails","params","useParams","movieDetails","setMovieDetails","open","setOpen","loading","setLoading","fetchMovieById","marginTop","textAlign","CircularProgress","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","API_KEY","movieId","module","exports"],"mappings":"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","file":"static/js/main.31fe4688.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/netflix-logo.5bc85db9.png\";","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./landing.css\";\nimport logo from \"../../assets/netflix-logo.png\";\ninterface LandingProps {}\n\nconst Landing: FC<LandingProps> = () => {\n  return (\n    <div className=\"landing\">\n      <img\n        className=\"landing__background \"\n        src=\"https://assets.nflxext.com/ffe/siteui/vlv3/33a85845-b76d-4e18-a74c-5859e3978a91/6726f1e1-1e2e-4060-a57f-344a7bd4d59a/GB-en-20210308-popsignuptwoweeks-perspective_alpha_website_large.jpg\"\n        alt=\"background-img\"\n      />\n\n      <div className=\"landing__logo\">\n        <img className=\"landing__logo-img\" src={logo} alt=\"background-img\" />\n      </div>\n      <a href=\"#\" className=\"landing__button\">\n        {\" \"}\n        Sign In{\" \"}\n      </a>\n\n      <div className=\"landing__center-box\">\n        <h1 className=\"landing__center-box-message\">\n          Unlimited film trailers, reviews and more.\n        </h1>\n        <h2 className=\"landing__center-box-sub-message\">\n          Review movies and find out what's hot and what's not.\n        </h2>\n        <Link to=\"/home\">\n          <button className=\"landing__center-box-get-started-btn\">\n            Get Started\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import axios  from 'axios' ;\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","export type RowProps = {\n    title:string,\n    fetchUrl:string,\n    isLargeRow?: boolean,\n}\n\nexport const initialMovieProps = {\n    name:'',\n    poster_path:'',\n    backdrop_path: '',\n    id:'',\n    title:'',\n    original_name:'string',\n    overview: 'string'\n  }","import React, { FC, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport instance from \"../utils/axios\";\nimport { requests } from \"../utils/requests\";\nimport { initialMovieProps } from \"../utils/types\";\nimport \"./banner.css\";\nimport { IconButton } from \"@material-ui/core\";\n\ninterface Props {}\n\nconst Banner: FC = (props: Props) => {\n  const {} = props;\n  const history = useHistory();\n  const [movie, setMovie] = useState(initialMovieProps);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(requests.fetchTrending);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n\n    fetchData();\n  }, []);\n\n  /* to maintain the overflow for the description we are using overflow function below*/\n  function truncate(str: string, n: number) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      {console.log(movie)}\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">\n          {\" \"}\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner__button\">\n          <IconButton>\n            <button\n              className=\"banner__button\"\n              onClick={() => history.push(`/movie/${movie?.id}`)}\n            >\n              More\n            </button>\n          </IconButton>\n          {/* <IconButton><button className = \"banner__button\">My List</button></IconButton>\n           */}\n        </div>\n        <h1 className=\"banner__description\">\n          {truncate(movie?.overview, 100)}\n        </h1>\n      </div>\n      <div className=\"banner__fadeBottom\" />\n    </header>\n  );\n};\n\nexport default Banner;\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Row.css\";\nimport { RowProps, initialMovieProps } from \"../utils/types\";\nimport { base_url } from \"../utils/requests\";\nimport instance from \"../utils/axios\";\n\nconst Row: FC<RowProps> = ({ title, fetchUrl, isLargeRow }) => {\n  const [movies, setMovies] = useState([initialMovieProps]);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row_posters\">\n        {/*several row posters*/}\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={(): void => history.push(`movie/${movie.id}`)}\n            className={`row_poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","import React,{FC} from 'react';\nimport Banner from '../../components/Banner';\nimport Row from '../../components/Row'\nimport {requests} from '../../utils/requests'\nimport './home.css'\ninterface HomeProps {\n    \n}\n\nconst Home: FC<HomeProps> = () => {\n    return (\n        <div className='app'>\n            <Banner/>\n            <Row title='NETFLIX ORIGINALS' fetchUrl={requests.fetchNetflixOriginals} isLargeRow></Row>\n            <Row title=\"Trending Now\"  fetchUrl={requests.fetchTrending}/>\n            <Row title=\"Top Rated\"  fetchUrl={requests.fetchTopRated}/>\n            <Row title=\"Action Movies\"  fetchUrl={requests.fetchActionMovies}/>\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { base_url } from \"../utils/requests\";\nimport Youtube from \"react-youtube\";\n\nimport \"./movieExcerpt.css\";\n\ninterface MovieExcerptProps {\n  title: string;\n  sidebarImg: string;\n  year: string;\n  producer: string;\n  tagline: string;\n  overview: string;\n}\nconst movieTrailer = require(\"movie-trailer\");\nconst MovieExcerpt: React.FC<MovieExcerptProps> = ({\n  title,\n  sidebarImg,\n  year,\n  producer,\n  tagline,\n  overview,\n}) => {\n  const [trailerUrl, setTrailerUrl] = useState<string | null>(\"\");\n  useEffect(() => {\n    movieTrailer(title || \"\")\n      .then((url: string) => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        if (urlParams.get(\"v\")) {\n          setTrailerUrl(urlParams.get(\"v\"));\n        }\n      })\n      .catch((err: any) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div className=\"movieExcerpts\">\n      <div className=\"movieExcerpts_sideBar\">\n        <div className=\"movieExcerpts_sideBarImgContainer\">\n          <img src={base_url + sidebarImg} alt=\"\" />\n        </div>\n      </div>\n\n      <div className=\"movieExcerpts_mainBar\">\n        <h1>{title}</h1>\n        <p className=\"movieExcerpts_mainBar_yearDetails\">\n          <span>{year}</span>\n          {\"  \"}\n          <span className=\"movieExcerpts_mainBar_text\">Produced By</span>\n          {\"  \"}\n          <span>{producer}</span>\n        </p>\n        <p\n          className=\"movieExcerpts_mainBar_text\"\n          style={{ fontWeight: \"bold\" }}\n        >\n          {tagline}\n        </p>\n        <p style={{ lineHeight: \"1.5\" }}>{overview}</p>\n        {trailerUrl && <Youtube videoId={trailerUrl} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieExcerpt;\n","import { request } from \"http\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport instance from \"../../utils/axios\";\nimport { requests, base_url } from \"../../utils/requests\";\nimport \"./movieDetails.css\";\nimport MovieExcerpt from \"../../components/MovieExcerpt\";\nimport logo from \"../../assets/netflix-logo.png\";\nconst MovieDetailProps = {\n  name: \"\",\n  poster_path: \"\",\n  backdrop_path: \"\",\n  id: \"\",\n  title: \"\",\n  original_name: \"string\",\n  overview: \"string\",\n  production_companies: [{ name: \"string\" }],\n  tagline: \"string\",\n  year: \"number\",\n};\n\nconst MovieDetails: FC<any> = () => {\n  const params: { id: string } = useParams();\n  const history = useHistory();\n  const [movieDetails, setMovieDetails] = useState(MovieDetailProps);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const request = await instance.get(requests.fetchMovieById(params.id));\n      setMovieDetails(request.data);\n      setLoading(false);\n      return request;\n    }\n    fetchData();\n    if (!movieDetails.backdrop_path && !loading) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }, [params.id]);\n\n  return (\n    <div className=\"movie-details\">\n      <div className=\"movie-details__navlogo\">\n        <Link to=\"/home\">\n          <img\n            className=\"movie-details__navlogoImg\"\n            src={logo}\n            alt=\"background-img\"\n          />\n        </Link>\n      </div>\n\n      {loading ? (\n        <div style={{ marginTop: \"10%\", textAlign: \"center\" }}>\n          <CircularProgress />\n        </div>\n      ) : (\n        <>\n          <div className=\"movie-details_header\">\n            <img\n              src={\n                base_url +\n                (movieDetails?.backdrop_path ?? movieDetails?.poster_path)\n              }\n            ></img>\n          </div>\n          <div className=\"movie-details_header--fade\"></div>\n          <MovieExcerpt\n            title={movieDetails.title}\n            overview={movieDetails.overview}\n            sidebarImg={movieDetails.poster_path}\n            producer={movieDetails?.production_companies?.[0]?.name}\n            tagline={movieDetails.tagline}\n            year={movieDetails.year}\n          />\n        </>\n      )}\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Movie Resource Not Found\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Sorry the requested movie is no longer available. Clicking ok will\n            redirect you to the home page.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => history.push(\"/home\")} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Landing from '../src/pages/landing/Landing'\nimport Home from '../src/pages/home/Home'\nimport './App.css';\nimport MovieDetails from './pages/details/MovieDetails';\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n          <Switch>\n           <Route exact path='/' component={Landing}/>  \n           <Route path='/home' component={Home}/>\n           <Route  path='/movie/:id'  component={MovieDetails}/>\n          </Switch>\n          \n          </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const API_KEY = '1600a1537d3dc82d8380daca3e0786a0';\nconst requests = {\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en=us`,\n    fetchNetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en=us`,\n    fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_generes=28`,\n    fetchMovieById: (movieId)=>{\n      return  `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    }\n\n  }\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nmodule.exports = {\n    API_KEY,\n    requests,\n    base_url\n}"],"sourceRoot":""}